
TLAB(分配缓冲区)：线程私有的，防止在给新对象分配内存时出现线程安全问题，提高内存分配效率。

方法区：存放已被虚拟机加载的类型信息，常量，静态变量等数据（垃圾回收信息查一下）
class文件中的静态常量池存放着各种字面值和符号引用，类加载后这部分内容会被加载到方法区里的运行时常量池。
运行时常量池和静态常量池的区别：字符串运常量池的内容并不一定和静态的一致，在运行期间还可能会增加内容，比如调用String的intern()方法
常量池的好处：常量池是为了避免频繁的创建和销毁对象而影响系统性能，其实现了对象的共享。


对象的创建过程：  1、虚拟机到方法区检查这个类是否被加载，没有则加载。
               2、在堆中分配出一块内存，其大小在类加载之后就可以确定，分配方式有指针碰撞和空闲列表，取决于堆空间是否规整，而堆
               规整与否又取决于所用的垃圾收集器是否有空间压缩能力。
               3、将给对象分配的空间进行零值处理，如果使用TLAB则可以在TLAB阶段提前进行。
               4、对象头设置，包括了类型元信息的指针，哈希码(在调用对象的hashcode方法时才会生成)，GC分代年龄，一些锁信息。
               5、执行<init>()方法。


对象的起始地址必须是8字节的整数倍，因此需要对其填充。



