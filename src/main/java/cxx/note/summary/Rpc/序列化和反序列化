

序列化是将对象转成可以用来传输或者存储的形式，也就是转化为一个字节流
而反序列化就是对某个对象的序列化字节流进行恢复，重新构建一个对象。

在序列化的时候，为了保证通讯双方对于对象可识别性，一般会将对象先转化为通用的数据格式，比如说JSON Protobuf等，再把它们转化为数据流进行传输，这样
可以实现跨平台或跨语言的可识别性

序列化的选择应该考虑的问题

1、序列化后数据的大小，数据大小决定了网络传输的性能
2、序列化的性能，序列化耗时较长可能会影响到业务的性能
3、是否支持跨平台，跨语言
