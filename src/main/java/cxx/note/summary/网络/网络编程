JAVA实现了三种网络编程的模式

一、BIO
同步并阻塞(传统阻塞型)，服务器实现模式为一个连接对应一个线程，即客户端有连接请求时服务器端就需要启动一个线程进行处理，如果这个连接什么都不做，就会
造成不必要的线程开销。
当其中一个线程在等待客户端的数据时(执行read函数)，线程会阻塞直至有数据。

二、NIO
同步非阻塞，该模式下的服务器可以用一个线程处理多个请求(连接)，客户端发送的连接请求都会注册到多路复用器(Selector选择器)上，多路复用器轮询到连接
有I/O请求就

多路复用器会接收所有客户端的通道请求，然后进行注册，这样就可以通过一个线程来管理这个多路复用器，多路复用器会自动去轮询所有管道，若哪些管道有数据的
请求操作，就会分配新的线程去处理，若管道没有数据则可以去做其他事情，所以说他是非阻塞的，但是它依然需要去轮询访问每个通道，但是当通道没有数据的时候，
它是不用阻塞在那里等待