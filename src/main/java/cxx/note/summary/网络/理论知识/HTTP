
HTTP(超文本传输协议)
资料：https://juejin.cn/post/7031130877224550430
https://juejin.cn/post/6844904100035821575?share_token=0908baeb-f19c-42e8-a08e-82d7bd8c1cd3
https://blog.csdn.net/qq_36777191/article/details/118964581
https://juejin.cn/post/6984611972171956238
-------------------------------------------------------------------------------------------------------------------
http1.0和http1.1的区别

1、长连接
(1)1.1版本在1.0的基础上默认开启了长连接，客户端和服务器之间建立的连接可以复用，节省了TCP连接频繁建立和断开的开销。
默认请求结束后保持连接一段时间，在客户端没有新的请求后，就可以主动断开连接，或者客户端在最后一个请求时，主动告诉服务端要断开连接。
(2)、增加了管道机制
增加了管道机制，即在同一个TCP连接中，客户端可以同时发送多个请求，但是服务端还是按序响应，会“队头阻塞”现象，依然是串行（客户端在收到前
边请求的响应前，后边的请求都要堵塞等待响应，）。
(3)、Host头处理
支持一台机器上有多个虚拟机，这些虚拟机共用一个IP地址，用host字段进行区分
(4)、扩展了一些功能
如缓存机制，错误状态码，可以进行范围请求

关于range域带宽优化及网络连接的使用，HTTP1.0中，存在一些浪费带宽的现象，例如客户端只是需要某个对象的一部分，而服务器却将整个对象送过来了，
并且不支持断点续传功能，HTTP1.1则在请求头引入了range头域，它允许只请求资源的某个部分，即返回码是206（Partial Content），这样就方便了
开发者自由的选择，以便于充分利用带宽和连接。
-------------------------------------------------------------------------------------------------------------------
2、http1.1和http2.0的区别
(1)头部压缩 HTTP2.0使用HPACK算法对header的数据进行压缩，这样数据体积小了，在网络上传输就会更快。
(2)多路复用
HTTP2.0采用二进制分帧(报文以二进制的形式发送)，将HTTP消息被分解为独立的二进制帧，交错发出去，在另一端根据流标识符和首部将他们重新组装起来，
就是说HTTP2用流来在一个TCP连接上来进行多个数据帧的通信，这就是多路复用的概念。
分帧之后，服务器看到的不再是一个个完整的HTTP请求报文，而是一堆乱序的二进制帧。这些二进制帧不存在先后关系，因此也就不会排队等待，也就没有了
HTTP的队头阻塞问题。
所谓的乱序，指的是不同StreamID是乱序的，但同一个StreamID的帧一定是按顺序传输的。二进制帧到达后对方会将StreamID相同的二进制
帧组装成完整的请求报文和响应报文。当然，在二进制帧当中还有其他的一些字段，实现了优先级和流量控制等功能。
(3)服务器推送
服务器已经不再是完全被动地接收请求，响应请求，它也能新建stream来给客户端发送消息，当TCP连接建立之后，比如浏览器请求一个HTML文件，服务
器就可以在返回HTML的基础上，将HTML中引用到的其他资源文件一起返回给客户端，减少客户端的等待

-------------------------------------------------------------------------------------------------------------------

3、如何解决对头阻塞
(1)并发连接：对于一个域名允许建立多个TCP连接，谷歌浏览器支持6个，相当于增加了队列，不至于所有任务只阻塞在一个队列上
(2)域名分片，相当于提高了并发连接的程度
以上的策略并没有真正从 HTTP 本身的层面解决问题，只是增加了TCP连接，分摊风险而已。而且这么做也有弊端，多条TCP连接会竞争有限的带宽，让
真正优先级高的请求不能优先处理。(3)才是解决方案
(3)使用http2 多路复用



