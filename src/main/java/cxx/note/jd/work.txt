1、进行业务迭代

2、架构升级

推荐融合服务

大促高并发场景

如何应对高并发场景
1、降级，包括降模型，降召回数量
2、限流（研究如何限流）


odin单机器的qps 15左右  首页     bw  5左右
机器大概是4000台
可用率高达99.99

能支持这么大并发量的原因

1、我们线上有大概4000多台  32G 16核的机器
每台机器的qps有几十

而且我们还有各种机制去应对高峰

比如说降级机制，降召回数量，降排序模型，还有熔断限流机制
通过监控机制去监控可用率，从而发现哪些环节可用率下降

如果兜不住，我们的上游会启动弱个性化兜底，如果再兜不住，前台客户端还有缓存兜底。

如何保证高可用

通过架构各方面的设计来保证，我们的一个推荐过程包括取数…召回，排序等环节，

每个业务类都继承统一的抽象类，抽象类都有try,catch块，某些业务类如果设计得不合理，在运行的过程中抛出异常都会被兜住，返回空值，防止把整个链路搞挂，

召回  冷启机制

还有超时限制，包括整个推荐链路的超时限制和业务对象级别的超时限制，比如说如果某个取数对象超时，会返回空值或者返回本地缓存数据，这样可以防止整个推荐链路超时，当然也会有多个对象出现超时的情况，比如说当qps比较高或者某些机器本身的原因，推荐链路就会启动兜底策略