一、diff工具优化升级

KR1: 缩减diff时间，提升diff效率。通过减少上报的diff日志、增加多个开关、多线程运行diff job等方式，可改善diff时的超时情况，预计减少diff时间40%以上，帮助开发人员在有限时间内模拟测试更多的用户请求。
KR2:优化diff上报内容，重点辅助非商品素材的指标问题排查。针对非商品素材指标长期未对齐情况，通过多个维度分类用户、增加不同时间段的请求样本等模拟线上真实请求，重点辅助非商品素材的指标排查。
KR3: 易用性优化。通过与itaas动态增加diff开关、页面效果优化等方式，减少开发人员diff时需手动注释代码的行为，页面提示更加友好，有助于更快识别当前报错信息。

参与军演压测，演练降级脚本，排查商详压测问题，保障大促期间，推荐系统的稳定性。

二、JRF、odin稳定性提升

KR1:odin架构持续优化、提升迭代效率，从算子合并、拆分入手，提高odin开发复用效率；

KR2:增强odin静态检测及分析能力，修复图中vertexs的算子依赖无效数据时未能提示的问题；

KR3:增强odin debug排查问题能力：修复sniffer下class显示错误问题；增加线上实时业务日志，抛异常时打印出具体推荐位及实验位；修复odin单算子产出多数据时，key不能反序列为String的问题；

KR4:梳理odin推荐位分类，制定odin标准化模板，以此提高通过低代码平台新接入推荐位的速度。

KR5:JRF规范化：engine、parser等模块代码跟合入规范化，接入cleanroom，自动发包等；

为增强odin调试能力，jrf层增加源码包、toString等辅助型功能；


odin迁移用户行为到v2，完善监控
